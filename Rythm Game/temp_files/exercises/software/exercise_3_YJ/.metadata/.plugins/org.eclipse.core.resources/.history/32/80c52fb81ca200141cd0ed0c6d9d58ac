#include <stdio.h>
#include <altera_up_sd_card_avalon_interface.h>

#define STR_LEN 20
char text[STR_LEN];
char buffer_name[STR_LEN];

int main(void) {
	alt_up_sd_card_dev *device_reference = NULL;
	int connected = 0;
	device_reference = alt_up_sd_card_open_dev("/dev/SD_Card");
	if (device_reference != NULL) {
		while(1) {
			if ((connected == 0) && (alt_up_sd_card_is_Present())) {
			printf("Card connected.\n");
				if (alt_up_sd_card_is_FAT16()) {
					printf("FAT16 file system detected.\n");
					//readFilesFromSDCard();
					int str = sd_list(Null,0,20);
					printf("babo\n");
				}else{
					printf("Unknown file system.\n");
				}
				connected = 1;
			} else if ((connected == 1) && (alt_up_sd_card_is_Present() == false)) {
				printf("Card disconnected.\n");
				connected = 0;
			}
		}
	}
	return 0;
}

#define STR_LEN 20
/* Interrupt Flag*/
volatile int edge_capture;
short int read_handler;
short int list_handler;
short int write_handler;
char buffer_name[STR_LEN];
char A[20] = "HEY.TXT";
char B[20] = "HEY.TXT";
char string[20] = "hello world";



int sd_fclose(short int handler, char text[STR_LEN])
{
	int x =0;
	if (handler != -1)	alt_up_sd_card_fclose(handler);
	else	{printf("File: %s",text);printf(" did not close properly\n");x =1;}
	return x;
}
int compare_strings(char A[STR_LEN], char B[STR_LEN])
{
	int match =0 ;
	int mismatch =0;
	int x = 0;
	for(x = 0; x <=STR_LEN; x++)
	{
		//printf("%d ", B[x]);
		if (B[x] == 46) break;
		if(x>0) if(match != 1) mismatch = 1;
		if(A[x] == B[x]) match = 1;
		else match = 0;
	}
	if(mismatch == 1) match =0;
	//printf("\n");
	//if(match == 1) printf("strings match\n");
	return match;
}
int sd_list(short int handler,int check, char text[STR_LEN])
{
	int match = 0;
	int x = 0 ;
	int ret = 0 ;
	int int_set=0;
	handler = alt_up_sd_card_find_first("", buffer_name);
	if(check == 0)
	{
		printf("%s \n", buffer_name);
		while ((handler = alt_up_sd_card_find_next(buffer_name)) != -1) printf("%s \n", buffer_name);
		/* BEWARE!! if you accidently close alt_up_sd_card_fclose(-1), this will lock your sd card
		 * card and bring it into limbo if you try to access it.
		 */

		handler = alt_up_sd_card_find_first("", buffer_name);
		sd_fclose(handler,text);
	}
	else if (check ==1 )
	{
		if(compare_strings(buffer_name , text))
		{
			int_set = 1;
			//printf("match found \n");
		}
		//else int_set = 0;
		//printf("%s %s\n",text, buffer_name);
		while ((handler = alt_up_sd_card_find_next(buffer_name)) != -1)
		{
			if(compare_strings(buffer_name , text))
			{
				int_set = 1;
				//printf("match found \n");
			}
			//else int_set =0;
			//printf("%s %s\n",text, buffer_name);
		}
		//printf("%s \n", buffer_name);
		/* BEWARE!! if you accidently close alt_up_sd_card_fclose(-1), this will lock your sd card
		 * card and bring it into limbo if you try to access it.
		 */
		//sd_fclose(handler,text);

		//if (int_set == 1) x = 1;
		//printf("int_set: %d\n",int_set);
	}

	return int_set;
}
